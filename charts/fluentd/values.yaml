# kind -- resource type to operate fluentd, can be StatefulSet or Deployment
kind: Deployment

# replicaCount -- number of replicas for fluentd deployment.
replicaCount: 1

image:
  # image.repository -- image repository
  repository: fluent/fluentd-kubernetes-daemonset
  # image.tag -- image tag (chart's appVersion value will be used if not set)
  tag: ""
  # image.pullPolicy -- image pull policy
  pullPolicy: IfNotPresent

# imagePullSecrets -- image pull secret for private images
imagePullSecrets: []
# nameOverride -- override name of the chart
nameOverride: ""
# fullnameOverride -- full name of the chart.
fullnameOverride: ""

# plugins -- list of plugins to be installed when container starts
plugins: []
#  - fluent-plugin-s3

serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: false
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  name:

# podSecurityContext -- specifies security settings for a pod
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- specifies security settings for a container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# containerPorts -- ports exposed by container
containerPorts:
  - name: http
    containerPort: 8888
    protocol: TCP
  - name: http-monitoring
    containerPort: 24231
    protocol: TCP

# deploymentAnnotations -- annotations to add to the deployment
deploymentAnnotations: {}
# podAnnotations -- annotations to add to the pod
podAnnotations: {}

service:
  # service.type -- service type
  type: ClusterIP
  # service.ports -- service ports
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: http-monitoring
      port: 24231
      targetPort: http-monitoring
      protocol: TCP

# resources -- custom resource configuration
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector -- node for scheduler pod assignment
nodeSelector: {}

# tolerations -- tolerations for scheduler pod assignment
tolerations: []

# affinity -- affinity for scheduler pod assignment
affinity: {}

# volumeMounts -- additional volume mounts
volumeMounts: []
  # - name: cache
  #   mountPath: /data/fluentd/cache

# volumes -- additional volumes
volumes: []
  # - name: cache
  #   emptyDir: {}

livenessProbe:
  httpGet:
    # livenessProbe.httpGet.path -- path for liveness probe
    path: /metrics
    # livenessProbe.httpGet.port -- port for liveness probe
    port: http-monitoring

readinessProbe:
  httpGet:
    # readinessProbe.httpGet.path -- path for readiness probe
    path: /metrics
    # readinessProbe.httpGet.port -- port for readiness probe
    port: http-monitoring

# env -- additional environment variables for the deployment
env: []
  # - name: SAMPLE
  #   value: text

# volumeClaimTemplates -- volume claim templates; used only when 'kind: StatefulSet'
volumeClaimTemplates: []
#  - apiVersion: v1
#    kind: PersistentVolumeClaim
#    metadata:
#      name: data
#    spec:
#      accessModes:
#        - ReadWriteOnce
#      resources:
#        requests:
#          storage: 10Gi

serviceMonitor:
  # serviceMonitor.enabled -- ServiceMonitor CRD is created for a prometheus operator
  enabled: false
  # serviceMonitor.additionalLabels -- additional labels for service monitor
  additionalLabels: {}

# fluentdConf -- fluentd config to provision inside of the container
fluentdConf: |-
  <source>
    @type prometheus
  </source>
  <source>
    @type prometheus_monitor
  </source>
  <source>
    @type prometheus_output_monitor
  </source>
  <source>
    @type http
    port 8888
  </source>
